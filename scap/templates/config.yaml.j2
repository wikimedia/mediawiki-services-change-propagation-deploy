spec: &spec
  x-sub-request-filters:
    - type: default
      name: http
      options:
        allow:
          - pattern: /^https?:\/\//
            forward_headers:
              user-agent: true
  title: The Change Propagation root
  paths:
    /{api:sys}/purge:
      x-modules:
        - path: src/sys/purge.js
          options:
            host: <%= purge_host %>
            port: <%= purge_port %>
    /{api:sys}/links:
      x-modules:
        - path: src/sys/dep_updates.js
          options:
            templates:
              mw_api:
                uri: <%= mwapi_uri %>
                headers:
                  host: '{{message.meta.domain}}'
                body:
                  formatversion: 2
    /{api:sys}/queue:
      x-modules:
        - path: src/sys/kafka.js
          options:
            metadata_broker_list: <%= broker_list %>
            dc_name: <%= site %>
            concurrency: <%= concurrency %>
            startup_delay: 60000
            templates:
              summary_definition_rerender: &summary_definition_rerender_spec
                topic: '/^(?:change-prop\.transcludes\.)?resource[-_]change$/'
                cases:
                  - match:
                      meta:
                        uri: '/^https?:\/\/[^\/]+\/api\/rest_v1\/page\/html\/([^\/]+)$/'
                      tags:
                        - restbase
                    match_not:
                      - meta:
                          domain: '/wiktionary\.org$/'
                      - meta:
                          domain: /\.wikidata\.org$/
                    exec:
                      method: get
                      # Don't encode title since it should be already encoded
                      uri: '<%= restbase_uri %>/{{message.meta.domain}}/v1/page/summary/{{match.meta.uri[1]}}'
                      query:
                        redirect: false
                      headers:
                        cache-control: no-cache
                  - match:
                      meta:
                        # These URIs are coming from RESTBase, so we know that article titles will be normalized
                        # and main namespace articles will not have : (uri-encoded, so %3a or %3A)
                        uri: '/^https?:\/\/[^\/]+\/api\/rest_v1\/page\/html\/((?:(?!%3a|%3A|\/).)+)$/'
                        domain: '/^en\.wiktionary\.org$/'
                      tags:
                        - restbase
                    exec:
                      method: get
                      # Don't encode title since it should be already encoded
                      uri: '<%= restbase_uri %>/{{message.meta.domain}}/v1/page/definition/{{match.meta.uri[1]}}'
                      query:
                        redirect: false
                      headers:
                        cache-control: no-cache

              mobile_rerender: &mobile_rerender_spec
                topic: '/^(?:change-prop\.transcludes\.)?resource[-_]change$/'
                match:
                  meta:
                    uri: '/^https?:\/\/[^\/]+\/api\/rest_v1\/page\/html\/([^/]+)$/'
                  tags:
                    - restbase
                match_not:
                  meta:
                    domain: /\.wikidata\.org$/
                exec:
                  method: get
                  # Don't encode title since it should be already encoded
                  uri: '<%= restbase_uri %>/{{message.meta.domain}}/v1/page/mobile-sections/{{match.meta.uri[1]}}'
                  query:
                    redirect: false
                  headers:
                    cache-control: no-cache

              purge_varnish: &purge_varnish_spec
                topic: '/^(?:change-prop\.transcludes\.)?resource[-_]change$/'
                match:
                  meta:
                    uri: '/^https?:\/\/[^\/]+\/api\/rest_v1\/(?<title>.+)$/'
                  tags:
                    - restbase
                match_not:
                  meta:
                    domain: /\.wikidata\.org$/
                exec:
                  method: post
                  uri: '/sys/purge/'
                  body:
                    - meta:
                        uri: '//{{message.meta.domain}}/api/rest_v1/{{match.meta.uri.title}}'

              # RESTBase update jobs
              mw_purge:
                topic: resource_change
                match:
                  meta:
                    uri: '/^https?:\/\/[^\/]+\/wiki\/(?<title>.+)$/'
                  tags:
                    - purge
                match_not:
                  meta:
                    domain: /\.wikidata\.org$/
                exec:
                  method: get
                  # This even comes directly from MediaWiki, so title is encoded in MW-specific way.
                  # Re-encode the title in standard `encodeURIComponent` encoding.
                  uri: '<%= restbase_uri %>/{{message.meta.domain}}/v1/page/html/{decode(match.meta.uri.title)}'
                  headers:
                    cache-control: no-cache
                    if-unmodified-since: '{{date(message.meta.dt)}}'
                  query:
                    redirect: false

              null_edit:
                topic: resource_change
                ignore:
                  status:
                    - 403 # Ignoring 403 since some of the pages with high number of null_edit events are blacklisted
                    - 412
                match:
                  meta:
                    uri: '/^https?:\/\/[^\/]+\/wiki\/(?<title>.+)$/'
                  tags:
                    - null_edit
                match_not:
                  meta:
                    domain: /\.wikidata\.org$/
                exec:
                  method: get
                  # This even comes directly from MediaWiki, so title is encoded in MW-specific way.
                  # Re-encode the title in standard `encodeURIComponent` encoding.
                  uri: '<%= restbase_uri %>/{{message.meta.domain}}/v1/page/html/{decode(match.meta.uri.title)}'
                  headers:
                    cache-control: no-cache
                    if-unmodified-since: '{{date(message.meta.dt)}}'
                  query:
                    redirect: false

              page_edit:
                topic: mediawiki.revision-create
                retry_on:
                  status:
                    - '5xx'
                    - 404 # Sometimes occasional 404s happen because of the mysql replication lag, so retry
                match_not:
                  - meta:
                      domain: /\.wikidata\.org$/
                    page_namespace: 0
                  - meta:
                      domain: /\.wikidata\.org$/
                    page_namespace: 120
                exec:
                  - method: get
                    uri: '<%= restbase_uri %>/{{message.meta.domain}}/v1/page/html/{message.page_title}/{{message.rev_id}}'
                    headers:
                      cache-control: no-cache
                      x-restbase-parentrevision: '{{message.rev_parent_id}}'
                      if-unmodified-since: '{{date(message.meta.dt)}}'
                    query:
                      redirect: false
                  - method: post
                    uri: '/sys/links/transcludes/{message.page_title}'
                    body: '{{globals.message}}'

              revision_visibility_change:
                topic: mediawiki.revision-visibility-change
                ignore:
                  status:
                    - 403 # When the revision is hidden 403 will be returned by RESTBase, it's a valid situation
                    - 412
                match_not:
                  - meta:
                      domain: /\.wikidata\.org$/
                    page_namespace: 0
                  - meta:
                      domain: /\.wikidata\.org$/
                    page_namespace: 120
                exec:
                  method: get
                  uri: '<%= restbase_uri %>/{{message.meta.domain}}/v1/page/revision/{{message.rev_id}}'
                  headers:
                    cache-control: no-cache
                  query:
                    redirect: false

              page_delete:
                topic: mediawiki.page-delete
                ignore:
                  status:
                    - 404 # 404 is a normal response for page deletion
                    - 412
                match_not:
                  - meta:
                      domain: /\.wikidata\.org$/
                    page_namespace: 0
                  - meta:
                      domain: /\.wikidata\.org$/
                    page_namespace: 120
                exec:
                  - method: get
                    uri: '<%= restbase_uri %>/{{message.meta.domain}}/v1/page/title/{message.page_title}'
                    headers:
                      cache-control: no-cache
                    query:
                      redirect: false
                  # For page deletion RESTBase doesn't emit resource_change events, and to go through
                  # the normal purge chain (html update -> html resource_change -> summary update -> summary resource_change)
                  # we need to add many workarounds/shortcurst in RESTBase. So having this list here is an OK compromise.
                  - method: post
                    uri: '/sys/purge/'
                    body:
                      - meta:
                          uri: '//{{message.meta.domain}}/api/rest_v1/page/html/{message.page_title}'
                      - meta:
                          uri: '//{{message.meta.domain}}/api/rest_v1/page/html/{message.page_title}/{{message.rev_id}}'
                      - meta:
                          uri: '//{{message.meta.domain}}/api/rest_v1/page/summary/{message.page_title}'
                      - meta:
                          uri: '//{{message.meta.domain}}/api/rest_v1/page/definition/{message.page_title}'
                      - meta:
                          uri: '//{{message.meta.domain}}/api/rest_v1/page/mobile-sections/{message.page_title}'
                      - meta:
                          uri: '//{{message.meta.domain}}/api/rest_v1/page/mobile-sections-lead/{message.page_title}'
                      - meta:
                          uri: '//{{message.meta.domain}}/api/rest_v1/page/mobile-sections-remaining/{message.page_title}'

              page_restore:
                topic: mediawiki.page-undelete
                match_not:
                  - meta:
                      domain: /\.wikidata\.org$/
                    page_namespace: 0
                  - meta:
                      domain: /\.wikidata\.org$/
                    page_namespace: 120
                exec:
                  method: get
                  uri: '<%= restbase_uri %>/{{message.meta.domain}}/v1/page/title/{message.page_title}'
                  headers:
                    cache-control: no-cache
                  query:
                    redirect: false

              page_move:
                topic: mediawiki.page-move
                match_not:
                  - meta:
                      domain: /\.wikidata\.org$/
                    page_namespace: 0
                  - meta:
                      domain: /\.wikidata\.org$/
                    page_namespace: 120
                exec:
                  - method: get
                    uri: '<%= restbase_uri %>/{{message.meta.domain}}/v1/page/html/{message.page_title}/{{message.rev_id}}'
                    headers:
                      cache-control: no-cache
                      if-unmodified-since: '{{date(message.meta.dt)}}'
                    query:
                      redirect: false
                  - method: get
                    uri: '<%= restbase_uri %>/{{message.meta.domain}}/v1/page/title/{message.prior_state.page_title}'
                    headers:
                      cache-control: no-cache
                    query:
                      redirect: false

              on_transclusion_update:
                concurrency: <%= concurrency * 8 %>
                topic: change-prop.transcludes.resource-change
                cases:
                  - match:
                      meta:
                        schema_uri: 'resource_change/1'
                        uri: '/https?:\/\/[^\/]+\/wiki\/(?<title>.+)/'
                      tags: [ 'transcludes' ]
                    exec:
                      method: get
                      uri: '<%= restbase_uri %>/{{message.meta.domain}}/v1/page/html/{{match.meta.uri.title}}'
                      headers:
                        cache-control: no-cache
                        if-unmodified-since: '{{date(message.meta.dt)}}'
                        x-restbase-mode: '{{message.tags[1]}}'
                      query:
                        redirect: false
                  - match:
                      meta:
                        schema_uri: 'continue/1'
                    exec:
                      method: post
                      uri: '/sys/links/transcludes/{message.original_event.page_title}'
                      body: '{{globals.message}}'

              # ORES caching updates
              ores_cache:
                <%- if ores_uris is not defined -%>
                  <%- set ores_uris = [ ores_uri ] -%>
                <%- endif %>
                topic: mediawiki.revision-create
                concurrency: 15
                ignore:
                  status:
                    - 503
                cases:
                  - match:
                      meta:
                        domain: ar.wikipedia.org
                      performer:
                        user_is_bot: false
                    exec:
                      <%- for ores_uri in ores_uris %>
                      - uri: '<%= ores_uri %>/v2/scores/arwiki/'
                        query:
                          models: 'reverted'
                          revids: '{{message.rev_id}}'
                          precache: true
                          format: 'json'
                      <%- endfor %>
                  - match:
                      meta:
                        domain: cs.wikipedia.org
                      performer:
                        user_is_bot: false
                    exec:
                      <%- for ores_uri in ores_uris %>
                      - uri: '<%= ores_uri %>/v2/scores/cswiki/'
                        query:
                          models: 'reverted'
                          revids: '{{message.rev_id}}'
                          precache: true
                          format: 'json'
                      <%- endfor %>
                  - match:
                      meta:
                        domain: en.wikipedia.org
                      performer:
                        user_is_bot: false
                    exec:
                      <%- for ores_uri in ores_uris %>
                      - uri: '<%= ores_uri %>/v2/scores/enwiki/'
                        query:
                          models: 'reverted|damaging|goodfaith'
                          revids: '{{message.rev_id}}'
                          precache: true
                          format: 'json'
                      <%- endfor %>
                  - match:
                      meta:
                        domain: en.wiktionary.org
                      performer:
                        user_is_bot: false
                    exec:
                      <%- for ores_uri in ores_uris %>
                      - uri: '<%= ores_uri %>/v2/scores/enwiktionary/'
                        query:
                          models: 'reverted'
                          revids: '{{message.rev_id}}'
                          precache: true
                          format: 'json'
                      <%- endfor %>
                  - match:
                      meta:
                        domain: es.wikipedia.org
                      performer:
                        user_is_bot: false
                    exec:
                      <%- for ores_uri in ores_uris %>
                      - uri: '<%= ores_uri %>/v2/scores/eswiki/'
                        query:
                          models: 'reverted'
                          revids: '{{message.rev_id}}'
                          precache: true
                          format: 'json'
                      <%- endfor %>
                  - match:
                      meta:
                        domain: et.wikipedia.org
                      performer:
                        user_is_bot: false
                    exec:
                      <%- for ores_uri in ores_uris %>
                      - uri: '<%= ores_uri %>/v2/scores/etwiki/'
                        query:
                          models: 'reverted'
                          revids: '{{message.rev_id}}'
                          precache: true
                          format: 'json'
                      <%- endfor %>
                  - match:
                      meta:
                        domain: fa.wikipedia.org
                      performer:
                        user_is_bot: false
                    exec:
                      <%- for ores_uri in ores_uris %>
                      - uri: '<%= ores_uri %>/v2/scores/fawiki/'
                        query:
                          models: 'reverted|damaging|goodfaith'
                          revids: '{{message.rev_id}}'
                          precache: true
                          format: 'json'
                      <%- endfor %>
                  - match:
                      meta:
                        domain: fr.wikipedia.org
                      performer:
                        user_is_bot: false
                    exec:
                      <%- for ores_uri in ores_uris %>
                      - uri: '<%= ores_uri %>/v2/scores/frwiki/'
                        query:
                          models: 'reverted'
                          revids: '{{message.rev_id}}'
                          precache: true
                          format: 'json'
                      <%- endfor %>
                  - match:
                      meta:
                        domain: he.wikipedia.org
                      performer:
                        user_is_bot: false
                    exec:
                      <%- for ores_uri in ores_uris %>
                      - uri: '<%= ores_uri %>/v2/scores/hewiki/'
                        query:
                          models: 'reverted'
                          revids: '{{message.rev_id}}'
                          precache: true
                          format: 'json'
                      <%- endfor %>
                  - match:
                      meta:
                        domain: hu.wikipedia.org
                      performer:
                        user_is_bot: false
                    exec:
                      <%- for ores_uri in ores_uris %>
                      - uri: '<%= ores_uri %>/v2/scores/huwiki/'
                        query:
                          models: 'reverted'
                          revids: '{{message.rev_id}}'
                          precache: true
                          format: 'json'
                      <%- endfor %>
                  - match:
                      meta:
                        domain: id.wikipedia.org
                      performer:
                        user_is_bot: false
                    exec:
                      <%- for ores_uri in ores_uris %>
                      - uri: '<%= ores_uri %>/v2/scores/idwiki/'
                        query:
                          models: 'reverted'
                          revids: '{{message.rev_id}}'
                          precache: true
                          format: 'json'
                      <%- endfor %>
                  - match:
                      meta:
                        domain: it.wikipedia.org
                      performer:
                        user_is_bot: false
                    exec:
                      <%- for ores_uri in ores_uris %>
                      - uri: '<%= ores_uri %>/v2/scores/itwiki/'
                        query:
                          models: 'reverted'
                          revids: '{{message.rev_id}}'
                          precache: true
                          format: 'json'
                      <%- endfor %>
                  - match:
                      meta:
                        domain: nl.wikipedia.org
                      performer:
                        user_is_bot: false
                    exec:
                      <%- for ores_uri in ores_uris %>
                      - uri: '<%= ores_uri %>/v2/scores/nlwiki/'
                        query:
                          models: 'reverted|damaging|goodfaith'
                          revids: '{{message.rev_id}}'
                          precache: true
                          format: 'json'
                      <%- endfor %>
                  - match:
                      meta:
                        domain: pl.wikipedia.org
                      performer:
                        user_is_bot: false
                    exec:
                      <%- for ores_uri in ores_uris %>
                      - uri: '<%= ores_uri %>/v2/scores/plwiki/'
                        query:
                          models: 'reverted|damaging|goodfaith'
                          revids: '{{message.rev_id}}'
                          precache: true
                          format: 'json'
                      <%- endfor %>
                  - match:
                      meta:
                        domain: pt.wikipedia.org
                      performer:
                        user_is_bot: false
                    exec:
                      <%- for ores_uri in ores_uris %>
                      - uri: '<%= ores_uri %>/v2/scores/ptwiki/'
                        query:
                          models: 'reverted|damaging|goodfaith'
                          revids: '{{message.rev_id}}'
                          precache: true
                          format: 'json'
                      <%- endfor %>
                  - match:
                      meta:
                        domain: ru.wikipedia.org
                      performer:
                        user_is_bot: false
                    exec:
                      <%- for ores_uri in ores_uris %>
                      - uri: '<%= ores_uri %>/v2/scores/ruwiki/'
                        query:
                          models: 'reverted|damaging|goodfaith'
                          revids: '{{message.rev_id}}'
                          precache: true
                          format: 'json'
                      <%- endfor %>
                  - match:
                      meta:
                        domain: tr.wikipedia.org
                      performer:
                        user_is_bot: false
                    exec:
                      <%- for ores_uri in ores_uris %>
                      - uri: '<%= ores_uri %>/v2/scores/trwiki/'
                        query:
                          models: 'reverted|damaging|goodfaith'
                          revids: '{{message.rev_id}}'
                          precache: true
                          format: 'json'
                      <%- endfor %>
                  - match:
                      meta:
                        domain: uk.wikipedia.org
                      performer:
                        user_is_bot: false
                    exec:
                      <%- for ores_uri in ores_uris %>
                      - uri: '<%= ores_uri %>/v2/scores/ukwiki/'
                        query:
                          models: 'reverted'
                          revids: '{{message.rev_id}}'
                          precache: true
                          format: 'json'
                      <%- endfor %>
                  - match:
                      meta:
                        domain: vi.wikipedia.org
                      performer:
                        user_is_bot: false
                    exec:
                      <%- for ores_uri in ores_uris %>
                      - uri: '<%= ores_uri %>/v2/scores/viwiki/'
                        query:
                          models: 'reverted'
                          revids: '{{message.rev_id}}'
                          precache: true
                          format: 'json'
                      <%- endfor %>
                  - match:
                      meta:
                        domain: www.wikidata.org
                      page_namespace: 0
                      performer:
                        user_is_bot: false
                    exec:
                      <%- for ores_uri in ores_uris %>
                      - uri: '<%= ores_uri %>/v2/scores/wikidatawiki/'
                        query:
                          models: 'reverted|damaging|goodfaith'
                          revids: '{{message.rev_id}}'
                          precache: true
                          format: 'json'
                      <%- endfor %>

              wikidata_description_on_edit:
                topic: mediawiki.revision-create
                match:
                  meta:
                    domain: www.wikidata.org
                  page_namespace: 0
                  # It's impossible to modify a comment in wikidata while editing the entity.
                  comment: '/wbeditentity|wbsetdescription|undo/'
                exec:
                  method: post
                  uri: '/sys/links/wikidata_descriptions'
                  body: '{{globals.message}}'

              wikidata_description_on_undelete:
                topic: mediawiki.page-undelete
                match:
                  meta:
                    domain: www.wikidata.org
                  page_namespace: 0
                exec:
                  method: post
                  uri: '/sys/links/wikidata_descriptions'
                  body: '{{globals.message}}'

              on_wikidata_description_change:
                topic: change-prop.wikidata.resource-change
                match:
                  meta:
                    uri: '/https?:\/\/[^\/]+\/wiki\/(?<title>.+)/'
                  tags: [ 'wikidata' ]
                exec:
                  - method: get
                    uri: '<%= restbase_uri %>/{{message.meta.domain}}/v1/page/summary/{{match.meta.uri.title}}'
                    headers:
                      cache-control: no-cache
                    query:
                      redirect: false
                  - method: get
                    uri: '<%= restbase_uri %>/{{message.meta.domain}}/v1/page/mobile-sections/{{match.meta.uri.title}}'
                    headers:
                      cache-control: no-cache
                    query:
                      redirect: false

              # Rerender summary when pageimages page property change
              page_images:
                topic: mediawiki.page-properties-change
                # We don't support 'OR' in the match section, so workaround it by 2 cases with identical exec
                cases:
                  - match:
                      added_properties:
                        page_image: '/.+/' # Regex that matches anything just to check the prop is set
                    match_not:
                      - meta:
                          domain: /\.wikidata\.org$/
                        page_namespace: 0
                      - meta:
                          domain: /\.wikidata\.org$/
                        page_namespace: 120
                    exec:
                      - method: get
                        uri: '<%= restbase_uri %>/{{message.meta.domain}}/v1/page/summary/{message.page_title}'
                        headers:
                          cache-control: no-cache
                        query:
                          redirect: false
                      - method: get
                        uri: '<%= restbase_uri %>/{{message.meta.domain}}/v1/page/mobile-sections/{message.page_title}'
                        headers:
                          cache-control: no-cache
                        query:
                          redirect: false
                  - match:
                      removed_properties:
                        page_image: '/.+/' # Regex that matches anything just to check the prop is set
                    match_not:
                      - meta:
                          domain: /\.wikidata\.org$/
                        page_namespace: 0
                      - meta:
                          domain: /\.wikidata\.org$/
                        page_namespace: 120
                    exec:
                      - method: get
                        uri: '<%= restbase_uri %>/{{message.meta.domain}}/v1/page/summary/{message.page_title}'
                        headers:
                          cache-control: no-cache
                        query:
                          redirect: false
                      - method: get
                        uri: '<%= restbase_uri %>/{{message.meta.domain}}/v1/page/mobile-sections/{message.page_title}'
                        headers:
                          cache-control: no-cache
                        query:
                          redirect: false


# Number of worker processes to spawn.
# Set to 0 to run everything in a single process without clustering.
# Use 'ncpu' to run as many workers as there are CPU units
num_workers: ncpu

# Log error messages and gracefully restart a worker if v8 reports that it
# uses more heap (note: not RSS) than this many mb.
worker_heap_limit_mb: 750

# The maximum interval in ms that can pass between two beat messages
# sent by each worker to the master before it is killed
worker_heartbeat_timeout: 15000

# Logger info
logging:
  level: warn
  name: <%= log_name %>
  streams:
    - host: <%= logstash_host %>
      port: <%= logstash_port %>
      type: gelf
    - level: info
      path: <%= log_file %>
      type: file

# Statsd metrics reporter
metrics:
  name: <%= metrics_name %>
  host: <%= metrics_host %>
  port: <%= metrics_port %>
  type: statsd

services:
  - name: <%= name %>
    # a relative path or the name of an npm package, if different from name
    module: hyperswitch
    # per-service config
    conf:
      cors: "*"
      port: <%= port %>
      # interface: localhost # uncomment to only listen on localhost
      # URL of the outbound proxy to use (complete with protocol)
      proxy: <%= proxy if proxy else '' %>
      # the list of domains for which not to use the proxy defined above
      # no_proxy_list:
      #   - domain1.com
      #   - domain2.org
      # the list of incoming request headers that can be logged; if left empty,
      # the following headers are allowed: cache-control, content-length,
      # content-type, if-match, user-agent, x-request-id
      # log_header_whitelist:
      #   - cache-control
      #   - content-length
      #   - content-type
      #   - if-match
      #   - user-agent
      #   - x-request-id
      user_agent: ChangePropagation/WMF
      spec: *spec
